// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`api resource group snapshot 1`] = `
AwsResourceGroup {
  "config": {
    "name": "api",
  },
  "dependencies": {},
  "id": 0,
  "platform": "aws",
  "resources": [
    {
      "config": {
        "Name": "api",
        "ProtocolType": "HTTP",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {},
      "getPrimaryKey": [Function],
      "groupId": 0,
      "id": 0,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": undefined,
      "type": "aws/api-gateway",
      "update": [Function: AsyncFunction],
    },
    {
      "config": {
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "api": {
          "config": {
            "Name": "api",
            "ProtocolType": "HTTP",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 0,
          "id": 0,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/api-gateway",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 0,
      "id": 1,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": undefined,
      "type": "aws/api-gateway/stage",
      "update": [Function: AsyncFunction],
    },
  ],
  "type": "api",
}
`;

exports[`route resource group snapshot 1`] = `
AwsResourceGroup {
  "config": {},
  "dependencies": {
    "fn": 1,
    "router": 0,
  },
  "id": 2,
  "platform": "aws",
  "resources": [
    {
      "config": {
        "RouteKey": "GET /hello",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "api": {
          "config": {
            "Name": "api",
            "ProtocolType": "HTTP",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 0,
          "id": 0,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/api-gateway",
          "update": [Function: AsyncFunction],
        },
        "lambdaIntegration": {
          "config": {},
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {
            "api": {
              "config": {
                "Name": "api",
                "ProtocolType": "HTTP",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 0,
              "id": 0,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "aws/api-gateway",
              "update": [Function: AsyncFunction],
            },
            "lambda": {
              "config": {
                "FunctionName": "function-1",
                "Handler": "index.handler.fn.js",
                "Runtime": "nodejs18.x",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {
                "policyAttachment": {
                  "config": {
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                  },
                  "create": [Function: AsyncFunction],
                  "delete": [Function: AsyncFunction],
                  "dependencies": {
                    "role": {
                      "config": {
                        "RoleName": "1-role",
                      },
                      "create": [Function: AsyncFunction],
                      "delete": [Function: AsyncFunction],
                      "dependencies": {},
                      "getPrimaryKey": [Function],
                      "groupId": 1,
                      "id": 3,
                      "output": null,
                      "read": [Function: AsyncFunction],
                      "retryOn": undefined,
                      "type": "aws/lambda/role",
                      "update": [Function: AsyncFunction],
                    },
                  },
                  "getPrimaryKey": [Function],
                  "groupId": 1,
                  "id": 4,
                  "output": null,
                  "read": undefined,
                  "retryOn": undefined,
                  "type": "aws/lambda/policy-attachment",
                  "update": undefined,
                },
                "role": {
                  "config": {
                    "RoleName": "1-role",
                  },
                  "create": [Function: AsyncFunction],
                  "delete": [Function: AsyncFunction],
                  "dependencies": {},
                  "getPrimaryKey": [Function],
                  "groupId": 1,
                  "id": 3,
                  "output": null,
                  "read": [Function: AsyncFunction],
                  "retryOn": undefined,
                  "type": "aws/lambda/role",
                  "update": [Function: AsyncFunction],
                },
                "zipFile": {
                  "config": {
                    "filePath": "src/fns/handler.fn.js",
                  },
                  "create": [Function: AsyncFunction],
                  "delete": [Function: AsyncFunction],
                  "dependencies": {},
                  "getPrimaryKey": [Function],
                  "groupId": 1,
                  "id": 2,
                  "output": null,
                  "read": [Function: AsyncFunction],
                  "retryOn": undefined,
                  "type": "std/zip",
                  "update": [Function: AsyncFunction],
                },
              },
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 5,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": [
                "InvalidParameterValueException: The role defined for the function cannot be assumed by Lambda",
              ],
              "type": "aws/lambda",
              "update": [Function: AsyncFunction],
            },
          },
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 8,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/api-gateway/integration/lambda",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 2,
      "id": 9,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": undefined,
      "type": "aws/api-gateway/route",
      "update": [Function: AsyncFunction],
    },
  ],
  "type": "api/route",
}
`;

exports[`route resource group snapshot 2`] = `
AwsResourceGroup {
  "config": {
    "config": {
      "fileName": "src/fns/handler.fn.js",
      "handler": "handler.fn.js",
    },
  },
  "dependencies": {},
  "id": 1,
  "platform": "aws",
  "resources": [
    {
      "config": {
        "filePath": "src/fns/handler.fn.js",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {},
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 2,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": undefined,
      "type": "std/zip",
      "update": [Function: AsyncFunction],
    },
    {
      "config": {
        "RoleName": "1-role",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {},
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 3,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": undefined,
      "type": "aws/lambda/role",
      "update": [Function: AsyncFunction],
    },
    {
      "config": {
        "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "role": {
          "config": {
            "RoleName": "1-role",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 3,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/lambda/role",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 4,
      "output": null,
      "read": undefined,
      "retryOn": undefined,
      "type": "aws/lambda/policy-attachment",
      "update": undefined,
    },
    {
      "config": {
        "FunctionName": "function-1",
        "Handler": "index.handler.fn.js",
        "Runtime": "nodejs18.x",
      },
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "policyAttachment": {
          "config": {
            "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {
            "role": {
              "config": {
                "RoleName": "1-role",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 3,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "aws/lambda/role",
              "update": [Function: AsyncFunction],
            },
          },
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 4,
          "output": null,
          "read": undefined,
          "retryOn": undefined,
          "type": "aws/lambda/policy-attachment",
          "update": undefined,
        },
        "role": {
          "config": {
            "RoleName": "1-role",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 3,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/lambda/role",
          "update": [Function: AsyncFunction],
        },
        "zipFile": {
          "config": {
            "filePath": "src/fns/handler.fn.js",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 2,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "std/zip",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 5,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": [
        "InvalidParameterValueException: The role defined for the function cannot be assumed by Lambda",
      ],
      "type": "aws/lambda",
      "update": [Function: AsyncFunction],
    },
    {
      "config": {},
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "lambda": {
          "config": {
            "FunctionName": "function-1",
            "Handler": "index.handler.fn.js",
            "Runtime": "nodejs18.x",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {
            "policyAttachment": {
              "config": {
                "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {
                "role": {
                  "config": {
                    "RoleName": "1-role",
                  },
                  "create": [Function: AsyncFunction],
                  "delete": [Function: AsyncFunction],
                  "dependencies": {},
                  "getPrimaryKey": [Function],
                  "groupId": 1,
                  "id": 3,
                  "output": null,
                  "read": [Function: AsyncFunction],
                  "retryOn": undefined,
                  "type": "aws/lambda/role",
                  "update": [Function: AsyncFunction],
                },
              },
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 4,
              "output": null,
              "read": undefined,
              "retryOn": undefined,
              "type": "aws/lambda/policy-attachment",
              "update": undefined,
            },
            "role": {
              "config": {
                "RoleName": "1-role",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 3,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "aws/lambda/role",
              "update": [Function: AsyncFunction],
            },
            "zipFile": {
              "config": {
                "filePath": "src/fns/handler.fn.js",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 2,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "std/zip",
              "update": [Function: AsyncFunction],
            },
          },
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 5,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": [
            "InvalidParameterValueException: The role defined for the function cannot be assumed by Lambda",
          ],
          "type": "aws/lambda",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 6,
      "output": null,
      "read": undefined,
      "retryOn": undefined,
      "type": "aws/lambda/log-group",
      "update": undefined,
    },
    {
      "config": {},
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "api": {
          "config": {
            "Name": "api",
            "ProtocolType": "HTTP",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 0,
          "id": 0,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/api-gateway",
          "update": [Function: AsyncFunction],
        },
        "lambda": {
          "config": {
            "FunctionName": "function-1",
            "Handler": "index.handler.fn.js",
            "Runtime": "nodejs18.x",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {
            "policyAttachment": {
              "config": {
                "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {
                "role": {
                  "config": {
                    "RoleName": "1-role",
                  },
                  "create": [Function: AsyncFunction],
                  "delete": [Function: AsyncFunction],
                  "dependencies": {},
                  "getPrimaryKey": [Function],
                  "groupId": 1,
                  "id": 3,
                  "output": null,
                  "read": [Function: AsyncFunction],
                  "retryOn": undefined,
                  "type": "aws/lambda/role",
                  "update": [Function: AsyncFunction],
                },
              },
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 4,
              "output": null,
              "read": undefined,
              "retryOn": undefined,
              "type": "aws/lambda/policy-attachment",
              "update": undefined,
            },
            "role": {
              "config": {
                "RoleName": "1-role",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 3,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "aws/lambda/role",
              "update": [Function: AsyncFunction],
            },
            "zipFile": {
              "config": {
                "filePath": "src/fns/handler.fn.js",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 2,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "std/zip",
              "update": [Function: AsyncFunction],
            },
          },
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 5,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": [
            "InvalidParameterValueException: The role defined for the function cannot be assumed by Lambda",
          ],
          "type": "aws/lambda",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 7,
      "output": null,
      "read": undefined,
      "retryOn": undefined,
      "type": "aws/lambda/permission/api-gateway",
      "update": undefined,
    },
    {
      "config": {},
      "create": [Function: AsyncFunction],
      "delete": [Function: AsyncFunction],
      "dependencies": {
        "api": {
          "config": {
            "Name": "api",
            "ProtocolType": "HTTP",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {},
          "getPrimaryKey": [Function],
          "groupId": 0,
          "id": 0,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": undefined,
          "type": "aws/api-gateway",
          "update": [Function: AsyncFunction],
        },
        "lambda": {
          "config": {
            "FunctionName": "function-1",
            "Handler": "index.handler.fn.js",
            "Runtime": "nodejs18.x",
          },
          "create": [Function: AsyncFunction],
          "delete": [Function: AsyncFunction],
          "dependencies": {
            "policyAttachment": {
              "config": {
                "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {
                "role": {
                  "config": {
                    "RoleName": "1-role",
                  },
                  "create": [Function: AsyncFunction],
                  "delete": [Function: AsyncFunction],
                  "dependencies": {},
                  "getPrimaryKey": [Function],
                  "groupId": 1,
                  "id": 3,
                  "output": null,
                  "read": [Function: AsyncFunction],
                  "retryOn": undefined,
                  "type": "aws/lambda/role",
                  "update": [Function: AsyncFunction],
                },
              },
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 4,
              "output": null,
              "read": undefined,
              "retryOn": undefined,
              "type": "aws/lambda/policy-attachment",
              "update": undefined,
            },
            "role": {
              "config": {
                "RoleName": "1-role",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 3,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "aws/lambda/role",
              "update": [Function: AsyncFunction],
            },
            "zipFile": {
              "config": {
                "filePath": "src/fns/handler.fn.js",
              },
              "create": [Function: AsyncFunction],
              "delete": [Function: AsyncFunction],
              "dependencies": {},
              "getPrimaryKey": [Function],
              "groupId": 1,
              "id": 2,
              "output": null,
              "read": [Function: AsyncFunction],
              "retryOn": undefined,
              "type": "std/zip",
              "update": [Function: AsyncFunction],
            },
          },
          "getPrimaryKey": [Function],
          "groupId": 1,
          "id": 5,
          "output": null,
          "read": [Function: AsyncFunction],
          "retryOn": [
            "InvalidParameterValueException: The role defined for the function cannot be assumed by Lambda",
          ],
          "type": "aws/lambda",
          "update": [Function: AsyncFunction],
        },
      },
      "getPrimaryKey": [Function],
      "groupId": 1,
      "id": 8,
      "output": null,
      "read": [Function: AsyncFunction],
      "retryOn": undefined,
      "type": "aws/api-gateway/integration/lambda",
      "update": [Function: AsyncFunction],
    },
  ],
  "type": "aws/function",
}
`;
